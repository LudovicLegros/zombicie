/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
/* medievalsharp-latin-ext-400-normal*/
@font-face {
  font-family: "MedievalSharp";
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: url(/build/fonts/medievalsharp-latin-ext-400-normal.080cd6b5.woff2) format("woff2"), url(/build/fonts/medievalsharp-all-400-normal.b7588c48.woff) format("woff");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* medievalsharp-latin-400-normal*/
@font-face {
  font-family: "MedievalSharp";
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: url(/build/fonts/medievalsharp-latin-400-normal.3bc2ffcc.woff2) format("woff2"), url(/build/fonts/medievalsharp-all-400-normal.b7588c48.woff) format("woff");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
* {
  margin: 0px;
  padding: 0px;
  list-style: none;
  box-sizing: border-box;
}

body {
  font-family: calibri;
}

.preload * {
  transition: none !important;
}

section {
  margin: 30px;
}

h1 {
  font-size: 1.5em;
  margin: 2em 1em;
}

a {
  color: black;
  text-decoration: none;
}

.success {
  color: white;
  background-color: rgb(11, 111, 11);
  padding: 1px 3px;
  text-align: center;
}

form {
  width: 300px;
}
form input, form select {
  display: block;
  width: 100%;
  margin: 10px 0;
  padding: 10px;
  border-radius: 10px;
  border: 1px solid #eee;
  transition: 0.3s border-color;
}
form input:hover, form select:hover {
  border: 1px solid #aaa;
}
form button {
  /* remove default behavior */
  appearance: none;
  -webkit-appearance: none;
  /* usual styles */
  padding: 10px;
  border: none;
  background-color: #726044;
  color: #fff;
  font-weight: 600;
  border-radius: 5px;
  width: 50%;
  transition: all ease-in-out 0.3s;
}
form button:hover {
  opacity: 80%;
  cursor: pointer;
}

.btn_delete {
  background-color: #711711;
  padding: 3px 6px;
  border-radius: 2px;
  color: white;
}

.btn {
  padding: 6px 10px;
  border: none;
  background-color: #726044;
  color: #fff;
  font-weight: 600;
  border-radius: 5px;
  width: auto;
  transition: all ease-in-out 0.3s;
}
.btn:hover {
  opacity: 80%;
  cursor: pointer;
}

.btn_join {
  color: green;
  font-weight: 900;
}

.header_image {
  width: 100%;
  height: 30vh;
}
.header_image img {
  object-fit: cover;
  height: 100%;
  width: 100%;
}

.header_fixed {
  position: fixed;
}

header {
  background-color: #30292F;
  height: 10vh;
  width: 100%;
  padding: 1em;
  top: 0;
  z-index: 3;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
header .btn_menu {
  display: none;
}
header .dropdown {
  opacity: 1 !important;
  height: auto !important;
}
header nav {
  width: 100%;
}
header ul {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}
header ul li {
  padding: 1em;
}
header ul li:nth-child(3) {
  margin-left: auto;
}
header ul a {
  color: white;
  font-size: 18px;
  font-weight: 700;
  transition: color 0.3s ease-in-out;
}
header ul a:hover {
  color: #726044;
}

h1 {
  font-family: "medievalsharp";
  text-align: center;
  margin: 1em;
}

#home {
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-wrap: wrap;
}
#home .table {
  display: flex;
  justify-content: space-between;
  align-items: center;
  text-align: center;
  flex-direction: column;
  margin: 1em;
  padding: 1em;
  width: 350px;
  height: 350px;
  border: 1px solid rgb(177, 176, 176);
}
#home .table .players {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  flex-wrap: wrap;
  width: 300px;
  height: 60%;
  font-family: medievalsharp;
  text-align: center;
}
#home .table .players p {
  background-color: #D5CCBF;
  border: 1px solid #726044;
  width: 50%;
  font-size: 20px;
  padding: 4px 7px;
  margin: 5px 2px;
}

main {
  padding-left: 200px;
  padding-top: 80px;
}
main #survivant_filter_ClasseName {
  position: absolute;
  left: 20px;
  top: 280px;
}
main #survivant_filter_ClasseName input {
  visibility: hidden;
}
main .filter {
  padding: 7vh 0 0 1em;
  left: 0px;
  top: 0px;
  width: 200px;
  height: 100%;
  background-color: #F2F1F1;
  position: fixed;
  z-index: 2;
}
main .filter .required {
  display: none;
}
main .filter .class_checkbox {
  position: absolute;
  left: 20px;
  top: 290px;
}
main .filter .class_checkbox li {
  margin-bottom: 5px;
}
main .filter img {
  width: 25px;
  padding: 2px;
  border: 1px solid #726044;
}
main .filter .cb_background {
  background-color: #D5CCBF;
}
main .filter form[name=survivant_filter] {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-direction: column;
}
main .filter form[name=survivant_filter] div {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 200px;
  flex-wrap: wrap;
}
main .filter form[name=survivant_filter] div:first-child {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
main .filter form[name=survivant_filter] div label {
  width: 60%;
  margin: 0.5em 0 0.5em 0;
  text-align: center;
}
main .filter form[name=survivant_filter] div #survivant_filter_ClasseName label {
  text-align: left;
}
main .filter form[name=survivant_filter] div input {
  width: 30%;
}
main .filter form[name=survivant_filter] div select {
  width: 70%;
}

#survivants {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
}

article {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  width: 600px;
  padding: 1em;
  border: 1px solid rgb(214, 213, 213);
  margin-bottom: 2em;
}
article .portrait {
  position: relative;
}
article .portrait > img {
  height: 260px;
  opacity: 1;
  transition: all 0.3s ease-in-out;
}
article .portrait .story {
  font-size: 20px;
  position: fixed;
  display: block;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  transform: translate(-50%, -50%);
  visibility: hidden;
  opacity: 0;
  transition: all 0.3s ease-in-out;
  z-index: 50;
  font-weight: 500;
  backdrop-filter: blur(5px);
  display: flex;
  justify-content: center;
  align-items: center;
}
article .portrait .story h3, article .portrait .story em {
  font-family: medievalsharp;
}
article .portrait .story:hover {
  cursor: pointer;
}
article .portrait .story img {
  position: absolute;
  object-fit: cover;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 25;
  opacity: 1 !important;
}
article .portrait .story .text {
  padding: 2em 2em;
  max-width: 600px;
  border: 1px solid #726044;
  position: relative;
  z-index: 26;
}
article .portrait .story .text .content {
  position: relative;
  z-index: 27;
}
article .portrait .storyVisible {
  visibility: visible;
  opacity: 1;
}
article .portrait:hover img {
  opacity: 50%;
  cursor: pointer;
}
article .portrait p {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: #D5CCBF;
  border: 1px solid #726044;
  padding: 1em 1.5em;
  font-family: medievalsharp;
  font-weight: 400;
  opacity: 0;
  transition: all 0.3s ease-in-out;
}
article .portrait:hover p {
  visibility: visible;
  opacity: 1;
  cursor: pointer;
}
article h2 {
  font-family: medievalsharp;
}
article .details {
  padding: 1em;
}
article ul {
  margin-top: 1em;
  width: 240px;
}
article ul li {
  position: relative;
  cursor: pointer;
  z-index: 1;
  margin: 2px 0 0 2px;
  position: relative;
}
article ul li:before {
  content: "";
  position: absolute;
  top: 0px;
  right: 0px;
  height: 1px;
  width: 0px;
  transition: all 0.3s ease-in-out;
}
article ul li span {
  visibility: hidden;
  position: absolute;
  background-color: rgb(227, 227, 227);
  box-shadow: 0px 0px 6px black;
  z-index: 2;
  padding: 1em;
  width: 250px;
  right: 100%;
  top: 0;
  opacity: 0%;
  transition: opacity 0.3s ease-in-out;
}
article ul li:hover span {
  visibility: visible;
  opacity: 100%;
}
article .blue {
  background: linear-gradient(90deg, rgba(2, 0, 36, 0) 50%, rgba(9, 9, 121, 0.26) 80%, rgb(9, 9, 121) 100%);
  border-bottom: 1px solid rgb(9, 9, 121);
}
article .blue:before {
  background-color: rgb(9, 9, 121);
}
article .yellow {
  background: linear-gradient(90deg, rgba(2, 0, 36, 0) 50%, rgba(149, 177, 13, 0.26) 80%, rgb(204, 218, 15) 100%);
  border-bottom: 1px solid rgb(204, 218, 15);
  margin-bottom: 6px;
  margin-top: 6px;
}
article .yellow:before {
  background-color: rgb(204, 218, 15);
}
article .orange {
  background: linear-gradient(90deg, rgba(2, 0, 36, 0) 50%, rgba(156, 86, 11, 0.26) 80%, rgb(156, 86, 11) 100%);
  border-bottom: 1px solid rgb(156, 86, 11);
}
article .orange:before {
  background-color: rgb(156, 86, 11);
}
article .orange2 {
  margin-bottom: 6px;
}
article .red {
  background: linear-gradient(90deg, rgba(2, 0, 36, 0) 50%, rgba(168, 15, 15, 0.26) 80%, rgb(168, 15, 15) 100%);
  border-bottom: 1px solid rgb(168, 15, 15);
}
article .red:before {
  background-color: rgb(168, 15, 15);
}

.classlogo {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  margin-top: 1em;
}
.classlogo img {
  height: 25px;
  margin-right: 2px;
}
.classlogo a {
  margin-left: auto;
}

li:hover::before {
  width: 100%;
}

#table_detail {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}
#table_detail h2 {
  font-family: medievalsharp;
  color: #30292F;
}
#table_detail article {
  margin: 2em;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 350px;
  width: 350px;
  position: relative;
}
#table_detail article .table_list {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 100%;
  width: 100%;
}
#table_detail article .table_list .table_singular {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 4px 7px;
  width: 100%;
  margin: 5px 0px;
  background-color: #D5CCBF;
}
#table_detail article .table_list .table_singular .singular_left {
  display: flex;
  justify-content: center;
  align-items: center;
}
#table_detail article .table_list .table_singular .singular_left > img {
  height: 50px;
  margin-right: 1em;
}

.classlogo_table {
  display: flex;
  justify-content: center;
  align-items: center;
}
.classlogo_table a {
  margin-left: 1em;
}
.classlogo_table img {
  height: 25px;
  margin: 0px 2px;
}

.chosen {
  border: 1px solid green;
  box-shadow: 0px 0px 2px green;
}

.bottom_profil {
  position: absolute;
  bottom: 5px;
  left: 50%;
  width: 70%;
  transform: translateX(-50%);
  text-align: center;
}

.formlog {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
}
.formlog a {
  display: block;
  margin-bottom: 1em;
  color: #30292F;
}

@media screen and (max-width: 840px) {
  main {
    padding-left: 0px;
  }
  main .filter {
    padding: 7vh 0 0 0;
    left: 0px;
    top: 0px;
    width: 100%;
    height: 200px;
    background-color: #F2F1F1;
    position: fixed;
  }
  main .filter form[name=survivant_filter] {
    flex-direction: row;
    justify-content: space-between;
  }
  main .filter button {
    position: absolute;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);
  }
  #survivants {
    flex-direction: column;
    flex-wrap: nowrap;
    margin-top: 150px;
  }
  #survivant_filter_ClasseName label {
    visibility: hidden;
  }
  form button {
    width: auto;
  }
  main .filter .class_checkbox {
    display: flex;
    justify-content: center;
    align-items: center;
    top: 110px;
    left: 240px;
  }
  main .filter .class_checkbox li {
    margin-right: 10px;
  }
}
@media screen and (max-width: 620px) {
  main .filter form[name=survivant_filter] {
    flex-direction: column;
    justify-content: flex-start;
    padding-top: 1em;
  }
  main .filter {
    height: 250px;
  }
  main .filter form[name=survivant_filter] div {
    flex-direction: column;
  }
  #survivants article {
    flex-direction: column;
    width: 400px;
  }
  main .filter .class_checkbox {
    left: 50%;
    top: 120px;
    transform: translateX(-50%);
  }
  header {
    background-color: unset;
  }
  header nav ul {
    position: fixed;
    height: 0px;
    top: 65px;
    flex-direction: column;
    align-items: flex-end;
    transition: all 0.3s ease-in-out;
    overflow: hidden;
  }
  header nav ul li {
    border: 1px solid white;
    width: 250px;
    background-color: #30292F;
  }
  main .filter {
    padding-top: 0;
    height: 200px;
  }
  #survivants article {
    width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
  article .portrait img {
    width: 100%;
    object-fit: cover;
  }
  article .portrait .story {
    font-size: 17px;
  }
  header .btn_menu {
    display: block;
    color: #D5CCBF;
    font-size: 25px;
    background-color: #30292F;
    padding: 4px;
    border-radius: 2px;
    position: fixed;
    top: 1em;
    right: 8px;
  }
  article ul li span {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/